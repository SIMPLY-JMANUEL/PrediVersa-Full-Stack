/* ===== SISTEMA DE GRID AVANZADO ===== */

/* Grid Container Base */
.gridContainer {
  display: grid;
  gap: var(--spacing-md);
  width: 100%;
  height: 100%;
}

/* Layout Principales */
.dashboardLayout {
  display: grid;
  grid-template-areas: 
    "header header"
    "sidebar main"
    "footer footer";
  grid-template-rows: auto 1fr auto;
  grid-template-columns: 280px 1fr;
  min-height: 100vh;
  gap: 0;
  
  @media (max-width: 992px) {
    grid-template-areas: 
      "header"
      "main"
      "footer";
    grid-template-columns: 1fr;
    grid-template-rows: auto 1fr auto;
  }
}

.dashboardHeader {
  grid-area: header;
  background: var(--color-blanco);
  border-bottom: 1px solid var(--color-borde-suave);
  padding: var(--spacing-md);
  position: sticky;
  top: 0;
  z-index: 100;
}

.dashboardSidebar {
  grid-area: sidebar;
  background: var(--color-azul-oscuro);
  color: var(--color-blanco);
  padding: var(--spacing-lg);
  overflow-y: auto;
  
  @media (max-width: 992px) {
    display: none;
  }
}

.dashboardMain {
  grid-area: main;
  padding: var(--spacing-lg);
  overflow-y: auto;
  background: var(--color-fondo);
}

.dashboardFooter {
  grid-area: footer;
  background: var(--color-blanco);
  border-top: 1px solid var(--color-borde-suave);
  padding: var(--spacing-md);
  text-align: center;
}

/* Grid de Contenido */
.contentGrid {
  display: grid;
  gap: var(--spacing-lg);
  
  /* Auto-fit con tamaños mínimos */
  &.autoFit {
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  }
  
  /* Auto-fill para llenar el espacio */
  &.autoFill {
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  }
  
  /* Columnas específicas */
  &.cols1 { grid-template-columns: 1fr; }
  &.cols2 { grid-template-columns: repeat(2, 1fr); }
  &.cols3 { grid-template-columns: repeat(3, 1fr); }
  &.cols4 { grid-template-columns: repeat(4, 1fr); }
  &.cols5 { grid-template-columns: repeat(5, 1fr); }
  &.cols6 { grid-template-columns: repeat(6, 1fr); }
  
  /* Responsive breakpoints */
  @media (max-width: 1200px) {
    &.cols6 { grid-template-columns: repeat(4, 1fr); }
    &.cols5 { grid-template-columns: repeat(3, 1fr); }
    &.cols4 { grid-template-columns: repeat(2, 1fr); }
  }
  
  @media (max-width: 768px) {
    &.cols6,
    &.cols5,
    &.cols4,
    &.cols3,
    &.cols2 { 
      grid-template-columns: 1fr; 
    }
  }
}

/* Grid de Tarjetas */
.cardGrid {
  display: grid;
  gap: var(--spacing-md);
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
}

.cardGridCompact {
  display: grid;
  gap: var(--spacing-sm);
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
}

.cardGridWide {
  display: grid;
  gap: var(--spacing-lg);
  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
}

/* Grid de Formularios */
.formGrid {
  display: grid;
  gap: var(--spacing-md);
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  align-items: start;
}

.formGridCompact {
  display: grid;
  gap: var(--spacing-sm);
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
}

.formGridWide {
  display: grid;
  gap: var(--spacing-lg);
  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
}

/* Grid de Estadísticas */
.statsGrid {
  display: grid;
  gap: var(--spacing-md);
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
}

.statsGridCompact {
  display: grid;
  gap: var(--spacing-sm);
  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
}

/* Grid Masonry (usando CSS Grid) */
.masonryGrid {
  display: grid;
  gap: var(--spacing-md);
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  grid-auto-rows: 20px;
}

.masonryItem {
  /* Los elementos necesitan definir su grid-row-end */
  /* Se calcula dinámicamente con JavaScript */
}

/* Grid Subgrid (para navegadores compatibles) */
.subgridContainer {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: var(--spacing-md);
}

.subgridItem {
  display: grid;
  grid-template-columns: subgrid;
  gap: var(--spacing-sm);
}

/* Grid con Áreas Nombradas */
.namedAreaGrid {
  display: grid;
  gap: var(--spacing-md);
  grid-template-areas: 
    "title title actions"
    "content content sidebar"
    "footer footer footer";
  grid-template-columns: 2fr 1fr 200px;
  grid-template-rows: auto 1fr auto;
  min-height: 400px;
}

.gridTitle { grid-area: title; }
.gridContent { grid-area: content; }
.gridSidebar { grid-area: sidebar; }
.gridActions { grid-area: actions; }
.gridFooter { grid-area: footer; }

/* Grid Responsive con Container Queries */
.responsiveGrid {
  display: grid;
  gap: var(--spacing-md);
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  container-type: inline-size;
}

@container (max-width: 600px) {
  .responsiveGrid {
    grid-template-columns: 1fr;
    gap: var(--spacing-sm);
  }
}

@container (min-width: 1200px) {
  .responsiveGrid {
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: var(--spacing-lg);
  }
}

/* Grid con Densidad Automática */
.denseGrid {
  display: grid;
  gap: var(--spacing-md);
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  grid-auto-flow: dense;
}

/* Items que ocupan múltiples columnas */
.spanCol2 { grid-column: span 2; }
.spanCol3 { grid-column: span 3; }
.spanCol4 { grid-column: span 4; }

.spanRow2 { grid-row: span 2; }
.spanRow3 { grid-row: span 3; }
.spanRow4 { grid-row: span 4; }

/* Grid con Sticky Elements */
.stickyGrid {
  display: grid;
  gap: var(--spacing-md);
  grid-template-columns: 200px 1fr;
  grid-template-rows: auto 1fr;
  height: 100vh;
  overflow: hidden;
}

.stickyGrid .stickyHeader {
  grid-column: 1 / -1;
  position: sticky;
  top: 0;
  z-index: 10;
  background: var(--color-blanco);
}

.stickyGrid .stickySidebar {
  position: sticky;
  top: 0;
  height: 100vh;
  overflow-y: auto;
  background: var(--color-gris-claro);
}

.stickyGrid .scrollContent {
  overflow-y: auto;
  padding: var(--spacing-md);
}

/* Utilidades de Grid */
.justifyStart { justify-content: start; }
.justifyCenter { justify-content: center; }
.justifyEnd { justify-content: end; }
.justifyStretch { justify-content: stretch; }
.justifySpaceBetween { justify-content: space-between; }
.justifySpaceAround { justify-content: space-around; }
.justifySpaceEvenly { justify-content: space-evenly; }

.alignStart { align-content: start; }
.alignCenter { align-content: center; }
.alignEnd { align-content: end; }
.alignStretch { align-content: stretch; }
.alignSpaceBetween { align-content: space-between; }
.alignSpaceAround { align-content: space-around; }
.alignSpaceEvenly { align-content: space-evenly; }

.itemStart { align-self: start; }
.itemCenter { align-self: center; }
.itemEnd { align-self: end; }
.itemStretch { align-self: stretch; }

.justifyItemStart { justify-self: start; }
.justifyItemCenter { justify-self: center; }
.justifyItemEnd { justify-self: end; }
.justifyItemStretch { justify-self: stretch; }
